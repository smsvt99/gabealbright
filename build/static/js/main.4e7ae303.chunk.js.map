{"version":3,"sources":["graphics/about.svg","graphics/contact.svg","graphics/portfolio.svg","graphics/king_kong.svg","graphics/gabe_albright.svg","Index/Index.js","About/About.js","Portfolio/Contents.js","Portfolio/SideBar.js","Portfolio/BigPreview.js","Portfolio/Portfolio.js","Contact/Contact.js","Login/Login.js","Admin/Upload.js","Admin/Editor.js","Admin/Edit.js","Admin/Admin.js","TopNav/TopNav.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Index","props","option","width","minWidth","background","position","top","height","concat","king_kong","backgroundSize","react_default","a","createElement","style","marginRight","marginTop","className","react_router_dom","to","src","about","alt","portfolio","contact","About","padding","Contents","imgStyle","margin","borderRadius","wrapperStyle","display","flexDirection","alignItems","cursor","pStyle","textAlign","marginBottom","htmlArray","media","filter","item","category","current","map","obj","onClick","setBigPreviewSource","fontSize","title","year","url","description","flexWrap","SideBar","titleStyle","borderBottom","setCurrent","toLowerCase","maxWidth","alignSelf","border","BigPreview","timeout","showDescription","clearTimeout","setTimeout","hideDescription","document","getElementById","opacity","window","addEventListener","end","console","log","hideBigPreview","removeEventListener","showBigPreview","id","left","backgroundColor","zIndex","bigPreviewSource","color","transition","bigPreviewDescription","Portfolio","state","content","rowStyle","e","_this","setState","target","innerHTML","realTarget","parentElement","lastChild","Portfolio_BigPreview","this","Portfolio_SideBar","Portfolio_Contents","Component","Contact","name","email","message","formStyle","inputStyle","submit","preventDefault","options","method","headers","Content-Type","body","JSON","stringify","fetch","controlChanges","field","Object","defineProperty","value","_this2","for","type","onChange","rows","cols","Login","username","password","serverDialogue","redirect","componentWillUnmount","then","res","has","sessionStorage","setItem","get","logIn","react_router","redirector","Upload","columnStyle","controlChange","_callee","regenerator_default","wrap","_context","prev","next","x-auth-token","getItem","sent","refreshContent","setView","stop","adminHeader","borderColor","Editor","componentDidMount","json","parseInt","finishEditing","delete","justifyContent","textDecoration","toString","Edit","editing","edit","cardStyle","Admin_Editor","sort","b","_id","Admin","view","string","loggedIn","Admin_Upload","Admin_Edit","TopNav","text","optionStyle","App","Promise","resolve","reject","src_TopNav_TopNav","backButtonStyle","paddingBottom","paddingTop","path","exact","render","src_Index_Index","src_About_About","src_Portfolio_Portfolio","src_Contact_Contact","src_Login_Login","src_Admin_Admin","Boolean","location","hostname","match","ReactDOM","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4e7ae303.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/about.41cbd73b.svg\";","module.exports = __webpack_public_path__ + \"static/media/contact.3093bbdc.svg\";","module.exports = __webpack_public_path__ + \"static/media/portfolio.5df0258b.svg\";","module.exports = __webpack_public_path__ + \"static/media/king_kong.2777a4b0.svg\";","module.exports = __webpack_public_path__ + \"static/media/gabe_albright.77b55e27.svg\";","import React from 'react';\nimport gabe_albright from '../graphics/gabe_albright.svg'\nimport about from '../graphics/about.svg'\nimport contact from '../graphics/contact.svg'\nimport portfolio from '../graphics/portfolio.svg'\nimport king_kong from '../graphics/king_kong.svg'\nimport { Link } from 'react-router-dom';\n\nconst Index = (props) => {\n    // const indexOptionsStyle = {\n    //     marginRight: \"100px\",\n    //     float: 'right'\n    // }\n\n    const option = {\n        width: '14%',\n        minWidth: '200px',\n    }\n    const background = {\n        position: 'absolute',\n        top: '20px',\n        width: '100%',\n        height: '90%',\n        background: `url(${king_kong}) no-repeat center center`,\n        backgroundSize: 'contain',\n        // backgroundRepeat: 'no-repeat',\n        // backgroundPosition: 'center'\n    }\n    const title = {\n        display: 'block',\n        margin: 'auto',\n        width: '28%',\n        minWidth: '450px'\n    }\n    const buttons = {\n        marginRight: '24%',\n        marginTop: '13%'\n    }\n\n    return (<div style={background}>\n            {/* <img\n                src={gabe_albright}\n                className=\"cloud\"\n                alt=\"gabe albright\"\n                style={title}\n            ></img> */}\n        <div style={buttons}>\n            <div className=\"cloud2\">\n                <Link\n                    to=\"/about\"\n                >\n                    <img\n                        style={option}\n                        src={about}\n                        alt=\"about\"\n                        className=\"grower\"\n                    >\n                    </img>\n                </Link>\n            </div>\n\n            <div className=\"cloud3\">\n                <Link to=\"/portfolio\">\n                    <img\n                        src={portfolio}\n                        alt=\"about\"\n                        style={option}\n                        className=\"grower\"\n                    >\n                    </img>\n                </Link>\n            </div>\n\n            <div className=\"cloud4\">\n                <Link to=\"/contact\">\n                    <img\n                        src={contact}\n                        alt=\"about\"\n                        style={option}\n                        className=\"grower\"\n                    >\n                    </img>\n                </Link>\n                {/* </div>\n        </div> */}\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default Index;","import React from 'react';\n\nconst About = (props) => {\n    const pStyle = {\n        padding: \"40px\"\n    }\n    // if(props.view === \"about\")\n    // {\n        return(\n            <div>\n                <h1>About</h1>\n                <p style = {pStyle}p>\n            </div>\n        )\n    // }\n    // else\n    // {\n    //     console.log(props.view)\n    //     return null;\n    // }\n}\n\nexport default About;","import React from 'react';\n\nconst Contents = (props) => {\n    const rowStyle = {\n        display: \"flex\",\n        flexWrap: 'wrap',\n        width: \"100%\",\n        margin: \"0px 20px\",\n        // border: \"1px solid grey\"\n    }\n    const imgStyle = {\n        width : \"150px\",\n        margin: \"auto\",\n        borderRadius: '7px'\n    }\n    const wrapperStyle = {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        margin : \"25px\",\n        width: \"200px\",\n        cursor: 'pointer',\n    }\n\n    const pStyle = {\n        textAlign: \"center\",\n        marginTop: '-10px',\n        marginBottom: '10px'\n    }\n\n    const media = props.media.filter((item)=>{\n        return item.category === props.current\n    })\n\n    const htmlArray = media.map(obj => {\n        return (\n            <div style={wrapperStyle}\n                className = \"grower\"\n                onClick = {props.setBigPreviewSource}\n            >\n                <h2 style={{fontSize: '16px', textAlign: 'center'}}>{obj.title}</h2>\n                <p style={pStyle}>{obj.year}</p>\n                <img \n                    style = {imgStyle}\n                    src={obj.url}\n                    alt = {obj.description}\n                    >\n                </img>\n            </div>\n        )\n    })\n    return(\n        <div>\n            <div style = {rowStyle}>\n                {htmlArray}\n            </div>\n        </div>\n    )\n}\n\nexport default Contents;","import React, {Component} from 'react';\n\nconst SideBar = (props) => {\n\n    const columnStyle = {\n        display: \"flex\",\n        flexDirection: \"column\",\n        maxWidth: '20%',\n        // marginLeft: \"10px\",\n        position: 'sticky',\n        top: '40px',\n        alignSelf: 'flex-start',\n        padding: '10px',\n        textAlign: 'center',\n        borderRadius: '10px',\n        border: '1px solid grey',\n        height: '100%'\n    }\n    const titleStyle = {\n        display: \"inline-block\",\n        cursor: \"pointer\",\n        borderBottom: '1px solid grey'\n\n    };\n\n    const categories = [\"Painting\", \"Illustration\", \"Carpentry\", \"Sculpture\", \"Video\", \"Other\"];\n\n\n    const htmlArray = categories.map(title => {\n        return(<h2\n                onClick = {props.setCurrent}\n                style = {titleStyle}\n                className = {props.current === title.toLowerCase() ? \"red grower\" : \"grower\"}\n            >{title}</h2>)\n                })\n\n        return(\n            <div style = {columnStyle}>\n                {htmlArray}\n            </div>\n        )\n}\n\nexport default SideBar;","import React from 'react'\n\nconst BigPreview = (props) => {\n    const imgStyle = {\n        height : \"90%\",\n        margin: 'auto'\n    }\n    \n    const screenStyle = {\n        height: \"100%\",\n        width: \"100%\",\n        position: 'fixed',\n        left: '0px',\n        top: '0px',\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundColor: 'rgba(0,0,0,.9)',\n        zIndex: 2,\n    }\n    \n    const descriptionStyle = {\n        backgroundColor: 'black',\n        opacity: '0',\n        color: 'white',\n        position: 'absolute',\n        top: '0px',\n        margin: '0px',\n        padding: '10px 30px',\n        transition: 'all .4s'\n    }\n\n    let timeout;\n\n    function showDescription(){\n        clearTimeout(timeout);\n        timeout = setTimeout(hideDescription, 3500);\n        document.getElementById('description').style.opacity = '.9';\n        window.addEventListener('click', end);\n\n    }\n\n    function hideDescription(){\n        document.getElementById('description').style.opacity = '0';\n    }\n\n    function end(){\n        console.log('end')\n        props.hideBigPreview();\n        clearTimeout(timeout);\n        window.removeEventListener('mousemove', showDescription);\n        window.removeEventListener('click', end)\n    }\n  \n    if(props.showBigPreview) {\n\n        window.addEventListener('mousemove', showDescription);\n        \n    return (\n        <div id=\"bigPreview\">\n            <div id=\"screen\" style = {screenStyle}>\n                <img style = {imgStyle} src={props.bigPreviewSource}></img>\n                <p id=\"description\" style = {descriptionStyle}>{props.bigPreviewDescription}</p>\n            </div>   \n        </div>)\n    } else {\n        return null;\n    }\n}\n\nexport default BigPreview;","import React, { Component } from 'react';\nimport Contents from './Contents';\nimport SideBar from \"./SideBar\";\nimport BigPreview from \"./BigPreview\";\n\n// const paintings = require('./media/paintings.json');\n\nclass Portfolio extends Component {\n    state = {\n        // content: paintings,\n        current: \"painting\",\n        bigPreviewSource : \"\",\n        bigPreviewDescription : \"\",\n        showBigPreview : false,\n        content : []\n    }\n\n    rowStyle = {\n        display: 'flex',\n        width: \"100%\"\n    }\n\n    setCurrent = (e) => { \n        this.setState({\n            current : e.target.innerHTML.toLowerCase()\n        })\n    }\n\n    setBigPreviewSource = (e) => {\n        let realTarget = e.target.parentElement.lastChild\n        if(!realTarget.src) {\n            realTarget = e.target.lastChild\n        }\n        console.log(realTarget)\n        this.setState({\n            bigPreviewSource : realTarget.src,\n            bigPreviewDescription : realTarget.alt,\n            showBigPreview : true\n        })\n    }\n\n    hideBigPreview = () => {\n        this.setState({\n            showBigPreview : false\n        })\n    }\n\n    render() {\n            return (\n                <div>\n                    <h1 className = \"header\">Portfolio</h1>\n                    <BigPreview\n                        bigPreviewSource = {this.state.bigPreviewSource}\n                        bigPreviewDescription = {this.state.bigPreviewDescription}\n                        showBigPreview = {this.state.showBigPreview}\n                        hideBigPreview = {this.hideBigPreview}\n                    />\n                    <div style={this.rowStyle}>\n                        <SideBar\n                            current={this.state.current}\n                            setCurrent={this.setCurrent}\n                        />\n                        <Contents\n                            media={this.props.media}\n                            current={this.state.current}\n                            setBigPreviewSource={this.setBigPreviewSource}\n                        />\n                    </div>\n                </div>\n            )\n        }\n}\n\nexport default Portfolio;","import React, { Component } from \"react\";\n\nclass Contact extends Component {\n\n    state = {\n        name: '',\n        email: '',\n        message: ''\n    }\n    formStyle = {\n        display: 'flex',\n        flexDirection: 'column',\n        width: \"300px\",\n        margin: 'auto'\n    }\n    inputStyle = { \n        marginBottom: \"20px\"\n    }\n    submit = (e) => {\n        e.preventDefault();\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                name: this.state.name,\n                email: this.state.email,\n                message: this.state.message\n            })\n        }\n\n        fetch('/sendMail', options)\n    }\n    controlChanges = (field, e) => {\n        this.setState({\n            [field]: e.target.value\n        })\n    }\n\n    render() {\n            return (\n                <div>\n                    <h1>Contact</h1>\n                    <form style={this.formStyle}>\n                        <label for=\"name\">Name</label>\n                        <input \n                            style={this.inputStyle} \n                            name=\"name\"  \n                            type=\"text\"\n                            onChange={(e)=>{this.controlChanges(\"name\", e)}}\n                            value={this.state.name}\n                            >\n                        </input>\n                        <label for=\"email\">Email</label>\n                        <input\n                             style={this.inputStyle}\n                             type=\"email\" \n                             name=\"email\"\n                             onChange={(e)=>{this.controlChanges(\"email\", e)}}\n                             value={this.state.email}\n                             >\n\n                             </input>\n                        <label for=\"message\">Message</label>\n                        <textarea\n                            style={this.inputStyle}\n                            name=\"message\"\n                            rows=\"4\"\n                            cols=\"50\"\n                            onChange={(e)=>{this.controlChanges(\"message\", e)}}\n                            value={this.state.message}\n                            >\n                            </textarea>\n                        <button onClick={this.submit} type=\"submit\">Submit</button>\n                    </form>\n                </div>);\n        }\n}\n\nexport default Contact;","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nclass Login extends Component {\n    state = {\n        username: '',\n        password: '',\n        serverDialogue: '',\n        redirect: false\n    }\n    wrapperStyle = {\n        display: 'flex',\n        flexDirection: 'column',\n        width: \"300px\",\n        margin: 'auto'\n    }\n    controlChanges = (e, field) => {\n        this.setState({\n            [field]: e.target.value\n        })\n    }\n\n    redirect = () => {\n        this.setState({\n            redirect: true\n        })\n    }\n    componentWillUnmount = () => {\n        this.setState({\n            redirect: false\n        })\n    }\n\n    submit = () => {\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                username: this.state.username,\n                password: this.state.password,\n            })\n        }\n\n        fetch('/login', options)\n            .then(res => {\n                // try{\n                if (res.headers.has('x-auth-token')) {\n                    sessionStorage.setItem('token', res.headers.get('x-auth-token'))\n                    this.props.logIn();\n                    this.redirect();\n                }\n                else {\n                    this.setState({\n                        serverDialogue: \"Authentication Failed\"\n                    })\n                }\n            })\n    }\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to=\"/admin\" />\n        } else {\n            return (\n                <div style={{textAlign: 'center'}}>\n                    <div style={{border: '1px solid grey', display: 'inline-block', padding: '25px', borderRadius: '10px'}}>\n                        <h1>Log in</h1>\n                        <div style={this.wrapperStyle}>\n                            {this.redirector}\n                            <p style={{ color: 'red' }}>{this.state.serverDialogue}</p>\n                            <p>Username</p>\n                            <input\n                                value={this.state.username}\n                                onChange={(e) => { this.controlChanges(e, 'username') }}\n                                name=\"username\"\n                                type=\"text\">\n                            </input>\n\n                            <p>Password</p>\n                            <input\n                                value={this.state.password}\n                                onChange={(e) => { this.controlChanges(e, 'password') }}\n                                name=\"password\"\n                                type=\"password\"></input>\n                            <p><button onClick={this.submit}>Login</button></p>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nexport default Login;","import React, {Component} from 'react';\n\nclass Upload extends Component{\n\n    state = {\n        category: 'painting',\n        url: '',\n        title: '',\n        year: '',\n        description: '',\n        serverDialogue: ''\n    }\n\n    columnStyle = {\n        display: 'flex',\n        flexDirection: 'column',\n        margin: 'auto',\n        width: '400px'\n    }\n\n    controlChange = (e, field) =>{\n        this.setState({\n            [field]: e.target.value\n        })\n    }\n\n    submit =  async () => {\n        const options = { \n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'x-auth-token': sessionStorage.getItem('token')\n            },\n            body: JSON.stringify({\n                category: this.state.category,\n                url: this.state.url,\n                title: this.state.title,\n                year: this.state.year,\n                description: this.state.description,\n            })\n        }\n        const fetcher = await fetch('/upload', options);\n        const newContent = await this.props.refreshContent();\n        const edit = await this.props.setView('edit');\n    }\n\n    render(){\n        return (\n            <div style={this.columnStyle}>\n                {this.props.adminHeader('upload')}\n                <img\n                    style={{width : '100px'}}\n                    src={this.state.url}\n                >\n                </img>\n                <p>URL</p>\n                <input\n                    type=\"text\"\n                    value={this.state.url}\n                    onChange={(e)=>this.controlChange(e,'url')}\n                    >      \n                </input>\n                <p>Category</p>\n                <select\n                    value={this.state.category}\n                    onChange={(e)=>this.controlChange(e,'category')}\n                >\n                    <option value='painting'>Painting</option>\n                    <option value='illustration'>Illustration</option>\n                    <option value='carpentry'>Carpentry</option>\n                    <option value='sculpture'>Sculpture</option>\n                    <option value='video'>Video</option>\n                    <option value='other'>Other</option>\n                </select>\n                <p>Title</p>\n                <input \n                    type=\"text\" \n                    name=\"Title\"\n                    value={this.state.title}\n                    onChange={(e)=>this.controlChange(e,'title')}>\n                </input>\n                <p>Year</p>\n                <input\n                    type = \"number\"\n                    value={this.state.year}\n                    onChange={(e)=>this.controlChange(e,'year')}\n                    >              \n                </input>\n                <p>Description</p>\n                <textarea \n                    style = {{width: '400px', height: '200px'}}\n                    value={this.state.description}\n                    onChange={(e)=>this.controlChange(e,'description')}\n                    >\n                </textarea>\n                <p style={{color:'red'}}>{this.state.serverDialogue}</p>\n                <button \n                    onClick = {this.submit}\n                    style = {{marginBottom: '50px', borderColor: 'black', color: 'white', backgroundColor: 'black', cursor: 'pointer'}}\n                    >Upload!</button>\n            </div>\n            )\n    }\n}\n\nexport default Upload;","import React, { Component } from 'react'\n\nclass Editor extends Component {\n    state = {\n        category: 'painting',\n        url: '',\n        title: '',\n        year: '',\n        description: '',\n        serverDialogue: ''\n    }\n\n    componentDidMount = () => {\n        //GET ONE\n        const options = {\n            headers: {\n                'x-auth-token': sessionStorage.getItem('token')\n            }\n        }\n        fetch(`/getOne/${this.props.target}`, options)\n            .then(res => res.json())\n            .then(res => {\n                this.setState({\n                    category: res.category,\n                    url: res.url,\n                    title: res.title,\n                    year: res.year,\n                    description: res.description,\n                })\n            })\n    }\n\n    controlChange = (e, field) => {\n        this.setState({\n            [field]: e.target.value\n        })\n    }\n\n    submit = (id) => {\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'x-auth-token': sessionStorage.getItem('token')\n            },\n            body: JSON.stringify({\n                category: this.state.category,\n                url: this.state.url,\n                title: this.state.title,\n                year: parseInt(this.state.year),\n                description: this.state.description,\n            })\n        }\n        fetch(`/update/${id}`, options)\n            .then(res => this.props.refreshContent())\n            .then(res => this.props.finishEditing())\n    }\n\n    delete = () => {\n        const options = {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n                'x-auth-token': sessionStorage.getItem('token')\n            }\n        }\n        fetch(`/delete/${this.props.target}`, options)\n            .then(res => this.props.refreshContent())\n            .then(res => this.props.finishEditing())\n    }\n    \n\n    columnStyle = {\n        display: 'flex',\n        flexDirection: 'column',\n        margin: 'auto',\n        width: '400px'\n    }\n    render() {\n        return (\n            <div style={this.columnStyle}>\n                <h1>Edit</h1>\n                <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                    <img\n                        style={{ width: '100px' }}\n                        src={this.state.url}\n                    >\n                    </img>\n                    <p\n                        onClick={this.delete}\n                        style={{ textDecoration: 'underline', color: 'red', cursor: 'pointer' }}\n                    >Delete?</p>\n                </div>\n                <p>URL</p>\n                <input\n                    type=\"text\"\n                    value={this.state.url}\n                    onChange={(e) => this.controlChange(e, 'url')}\n                >\n                </input>\n                <p>Category</p>\n                <select\n                    value={this.state.category}\n                    onChange={(e) => this.controlChange(e, 'category')}\n                >\n                    <option value='painting'>Painting</option>\n                    <option value='illustration'>Illustration</option>\n                    <option value='carpentry'>Carpentry</option>\n                    <option value='sculpture'>Sculpture</option>\n                    <option value='video'>Video</option>\n                    <option value='other'>Other</option>\n                </select>\n                <p>Title</p>\n                <input\n                    type=\"text\"\n                    name=\"Title\"\n                    value={this.state.title}\n                    onChange={(e) => this.controlChange(e, 'title')}>\n                </input>\n                <p>Year</p>\n                <input\n                    type=\"number\"\n                    value={this.state.year.toString()}\n                    onChange={(e) => this.controlChange(e, 'year')}\n                >\n                </input>\n                <p>Description</p>\n                <textarea\n                    style={{ width: '400px', height: '200px' }}\n                    value={this.state.description}\n                    onChange={(e) => this.controlChange(e, 'description')}\n                >\n                </textarea>\n                <p style={{ color: 'red' }}>{this.state.serverDialogue}</p>\n                <button\n                    onClick={() => {\n                        this.submit(this.props.target)\n                    }}\n                    style={{ marginBottom: '50px', borderColor: 'black', color: 'white', backgroundColor: 'black', cursor: 'pointer' }}\n                >Upload!</button>\n            </div>\n        )\n    }\n}\n\nexport default Editor","import React, {Component} from 'react';\nimport Editor from './Editor';\n\nclass Edit extends Component{\n    state = {\n        editing: false,\n        target: ''\n    }\n\n    edit = (id) => {\n        this.setState({\n            editing: true,\n            target: id\n        })\n    }\n\n    finishEditing = () => {\n        this.setState({\n            editing: false,\n            target: ''\n        })\n    }\n\n    cardStyle = {\n        display: 'flex',\n        flexDirection: 'row',\n        margin: '10px 40px',\n        padding: '10px',\n        border: '1px solid grey',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        cursor: 'pointer',\n        borderRadius: '20px'\n    }\n    \n\n    render(){\n        if(!this.state.editing){\n            let media = this.props.media.sort((a,b)=>{\n                return a.category - b.category\n            })\n            let htmlArray = media.map(item => {\n                return <div style = {this.cardStyle} \n                            onClick = {() => this.edit(item._id)}\n                            className = \"thickener\"\n                        >\n                    <p style={{display: 'inline-block'}}>{item.category}</p>\n                    <div style={{display: 'flex', flexDirection: 'column'}}>\n                        <h3 style={{display: 'inline-block'}} >{item.title}</h3>\n                        <p style={{display: 'inline-block'}}>{item.year}</p>\n                    </div>\n                    <p style={{display:'inline-block'}}>{item.description}</p>\n                    <img style={{width: '80px', height: '80px', display: 'inline-block'}} src={item.url}/>\n                </div>\n            })\n        return(\n        <div>\n             {this.props.adminHeader('edit')}\n             <div style = {{display: 'flex', flexDirection: 'column', justifyContent: 'flex-start', flexWrap: 'wrap'}}>\n                {htmlArray}\n             </div>\n        </div>\n        )\n        } else {\n            return <Editor \n                        target = {this.state.target}\n                        finishEditing = {this.finishEditing}\n                        refreshContent = {this.props.refreshContent}\n                    />;\n        }\n    }\n}\n\nexport default Edit;","import React, { Component } from 'react';\nimport Upload from './Upload';\nimport Edit from './Edit';\nimport { Redirect } from 'react-router-dom';\n\nclass Admin extends Component {\n    state = {\n        view: 'upload',\n    }\n\n    setView = (string) => {\n        this.setState({\n            view: string\n        })\n    }\n\n    rowStyle = {\n        display: 'flex',\n        maxWidth: '400px',\n        justifyContent: 'space-between',\n        margin: 'auto'\n    }\n\n    adminHeader = (view) => {\n        return (<div>\n            <h1>Admin</h1>\n            <div style={this.rowStyle}>\n                <p\n                    className=\"option\"\n                    style={view === 'upload' ? { textDecoration: 'underline' }\n                        : { textDecoration: 'none' }}\n                    onClick={() => { this.setView('upload') }}>\n                    Upload Content\n                            </p>\n                <p\n                    className=\"option\"\n                    style={view === 'edit' ? { textDecoration: 'underline' }\n                        : { textDecoration: 'none' }}\n                    onClick={() => { this.setView('edit') }}>\n                    Edit Content\n                            </p>\n            </div>\n        </div>)\n    }\n\n    render() {\n        if (!this.props.loggedIn) {\n            return <Redirect to=\"/\" />\n        } else {\n            if (this.state.view === 'upload') {\n                return (<Upload\n                    adminHeader={this.adminHeader}\n                    refreshContent={this.props.refreshContent}\n                    setView={this.setView}\n                />)\n            }\n            if (this.state.view === 'edit') {\n                return (<Edit\n                    adminHeader={this.adminHeader}\n                    media = {this.props.media}\n                    refreshContent = {this.props.refreshContent}\n                />)\n            }\n        }\n    }\n\n}\n\nexport default Admin;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst TopNav = (props) => {\n\n    const optionStyle = {\n        cursor: \"pointer\",\n        textDecoration: \"underline\",\n        margin: '2px 10px 10px 10px'\n      }\n\n      const listStyle = {\n          display: 'flex',\n          justifyContent: 'flex-end',\n          padding: 0,\n          margin: 0,\n      }\n    \n    let text;\n    let target;\n\n    if(props.loggedIn){\n        text = \"Admin Panel\"\n        target = \"/admin\"\n    } else {\n        text = \"Login\"\n        target = \"/login\"\n    }\n\n        return(<ul style = {listStyle}>\n            <Link to=\"/\">\n            <p\n                style={optionStyle}\n                className=\"option grower\"\n            >Home\n            </p>\n            </Link>\n\n            <Link to={target}>\n            <p\n                style={optionStyle}\n                className=\"option grower\"\n            >{text}\n            </p>\n            </Link>\n\n            <Link to='/about'>\n            <p\n                style={optionStyle}\n                className=\"option grower\"\n            >About\n            </p>\n            </Link>\n\n            <Link to='/portfolio'>\n            <p\n                style={optionStyle}\n                className=\"option grower\"\n            >Portfolio\n            </p>\n            </Link>\n\n            <Link to='/contact'>\n            <p\n                style={optionStyle}\n                className=\"option grower\"\n            >Contact\n            </p>\n            </Link>\n\n\n        </ul>)\n        }\n\nexport default TopNav;","import React, { Component } from 'react';\nimport './App.css';\n\nimport Index from './Index/Index';\nimport About from './About/About';\nimport Portfolio from './Portfolio/Portfolio';\nimport Contact from './Contact/Contact';\nimport Login from './Login/Login';\nimport Admin from './Admin/Admin';\nimport TopNav from './TopNav/TopNav';\n\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n\nclass App extends Component {\n  state = {\n    view: \"index\",\n    media: [],\n    loggedIn: false\n  }\n\n  logIn = () => {\n    this.setState({\n      loggedIn: true\n    })\n  }\n\n  componentDidMount = () => {\n    this.refreshContent();\n  }\n\n  refreshContent = () => {\n    console.log('refresh')\n    fetch('/pull')\n    .then(res => res.json())\n\n    .then(res => {\n      this.setState({\n        media: res\n      })\n    })\n    .then(res=>{\n      return new Promise((resolve, reject) => {\n        resolve(\"done\")\n      });\n    })\n  }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <TopNav\n            loggedIn={this.state.loggedIn}\n            backButtonStyle={this.backButtonStyle}\n          />\n          <div style={{paddingBottom:'20px', paddingTop: '2px'}}>\n            <h1 style={{padding: 0, margin: 0, fontSize: '45px'}}>Gabe Albright</h1>\n            <p style={{padding: 0, margin: 0,textAlign: 'center'}}>Artist for Hire</p>\n          </div>\n          <Route\n            path = \"/\"\n            exact\n            render = {(props) => \n              <Index\n              loggedIn={this.state.loggedIn}        \n            />}\n          />\n\n          <Route\n            path = \"/about\"\n            exact\n            render = {(props) => \n              <About\n            />}\n          />\n\n          <Route\n            path = \"/portfolio\"\n            exact\n            render = {(props) =>\n              <Portfolio\n              media={this.state.media}\n            />}\n          />\n\n          <Route\n            path=\"/contact\"\n            exact\n            render = {(props)=>\n              <Contact\n              />}\n            />\n\n            <Route\n              path=\"/Login\"\n              exact\n              render = {(props)=>\n                <Login\n                logIn={this.logIn}\n            />}\n          />\n\n          <Route\n            path=\"/admin\"\n            exact\n            render ={(props)=>\n              <Admin\n                loggedIn={this.state.loggedIn}\n                media={this.state.media}\n                refreshContent={this.refreshContent}\n              />}\n          />\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}