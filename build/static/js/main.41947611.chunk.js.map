{"version":3,"sources":["Index/Index.js","About/About.js","Portfolio/Contents.js","Portfolio/SideBar.js","Portfolio/BigPreview.js","Portfolio/Portfolio.js","Contact/Contact.js","Login/Login.js","Admin/Upload.js","Admin/Editor.js","Admin/Edit.js","Admin/Admin.js","TopNav/TopNav.js","App.js","serviceWorker.js","index.js"],"names":["Index","props","optionStyle","textAlign","react_default","a","createElement","style","marginRight","float","react_router_dom","to","className","About","padding","Contents","imgStyle","width","margin","wrapperStyle","display","flexDirection","alignItems","cursor","pStyle","marginTop","marginBottom","htmlArray","media","filter","item","category","current","map","obj","onClick","setBigPreviewSource","title","year","src","url","alt","description","flexWrap","SideBar","titleStyle","setCurrent","toLowerCase","marginLeft","BigPreview","timeout","showDescription","clearTimeout","setTimeout","hideDescription","document","getElementById","opacity","window","addEventListener","end","console","log","hideBigPreview","removeEventListener","showBigPreview","id","height","position","left","top","backgroundColor","zIndex","bigPreviewSource","color","transition","bigPreviewDescription","Portfolio","state","content","rowStyle","e","_this","setState","target","innerHTML","realTarget","parentElement","lastChild","Portfolio_BigPreview","this","Portfolio_SideBar","Portfolio_Contents","Component","Contact","name","email","message","formStyle","inputStyle","submit","preventDefault","options","method","headers","Content-Type","body","JSON","stringify","fetch","controlChanges","field","Object","defineProperty","value","_this2","for","type","onChange","rows","cols","Login","username","password","serverDialogue","redirect","componentWillUnmount","then","res","has","sessionStorage","setItem","get","logIn","react_router","redirector","Upload","columnStyle","controlChange","_callee","regenerator_default","wrap","_context","prev","next","x-auth-token","getItem","sent","refreshContent","setView","stop","adminHeader","borderColor","Editor","componentDidMount","concat","json","parseInt","finishEditing","delete","justifyContent","textDecoration","toString","Edit","editing","edit","cardStyle","border","borderRadius","Admin_Editor","sort","b","_id","Admin","view","string","maxWidth","loggedIn","Admin_Upload","Admin_Edit","TopNav","text","App","Promise","resolve","reject","src_TopNav_TopNav","backButtonStyle","path","exact","render","src_Index_Index","src_About_About","src_Portfolio_Portfolio","src_Contact_Contact","src_Login_Login","src_Admin_Admin","Boolean","location","hostname","match","ReactDOM","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.41947611.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Index = (props) => {\n    const indexOptionsStyle = {\n        marginRight: \"100px\",\n        float: 'right'\n    }\n\n    const loginStyle = {\n        marginRight: '100px',\n        position: 'absolute',\n        right: '20px',\n        top: '10px'\n    }\n\n    const optionStyle = {\n        textAlign: 'right',\n    }\n\n        return (<div>\n            <h1>GABE ALBRIGHT</h1>\n            <ul style={indexOptionsStyle}>\n                \n                <Link to=\"/about\" style = {{}}>\n                    <h2\n                        style={optionStyle}\n                        className=\"option grower\"\n                    >\n                        ABOUT\n                    </h2>\n                </Link>\n\n                <Link to = \"/portfolio\">\n                    <h2 \n                        style={optionStyle} \n                        className=\"option grower\" \n                    >\n                        PORTFOLIO\n                    </h2>\n                </Link>\n\n                <Link to = \"/contact\">\n                    <h2 \n                        style={optionStyle}\n                        className=\"option grower\" \n                    >\n                        CONTACT\n                    </h2>\n                </Link>\n            </ul>\n        </div>\n        )\n}\n\nexport default Index;","import React from 'react';\n\nconst About = (props) => {\n    const pStyle = {\n        padding: \"40px\"\n    }\n    // if(props.view === \"about\")\n    // {\n        return(\n            <div>\n                <h1>About</h1>\n                <p style = {pStyle}p>\n            </div>\n        )\n    // }\n    // else\n    // {\n    //     console.log(props.view)\n    //     return null;\n    // }\n}\n\nexport default About;","import React from 'react';\n\nconst Contents = (props) => {\n    const rowStyle = {\n        display: \"flex\",\n        flexWrap: 'wrap',\n        width: \"100%\"\n    }\n    const imgStyle = {\n        width : \"150px\",\n        margin: \"auto\"\n    }\n    const wrapperStyle = {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        margin : \"25px\",\n        width: \"200px\",\n        cursor: 'pointer',\n    }\n    const pStyle = {\n        textAlign: \"center\",\n        marginTop: '-10px',\n        marginBottom: '10px'\n    }\n\n    const media = props.media.filter((item)=>{\n        return item.category === props.current\n    })\n\n    const htmlArray = media.map(obj => {\n        return (\n            <div style={wrapperStyle}\n                className = \"grower\"\n                onClick = {props.setBigPreviewSource}\n            >\n                <h2>{obj.title}</h2>\n                <p style={pStyle}>{obj.year}</p>\n                <img \n                    style = {imgStyle}\n                    src={obj.url}\n                    alt = {obj.description}\n                    >\n                </img>\n            </div>\n        )\n    })\n    return(\n        <div>\n            <div style = {rowStyle}>\n                {htmlArray}\n            </div>\n        </div>\n    )\n}\n\nexport default Contents;","import React, {Component} from 'react';\n\nconst SideBar = (props) => {\n\n    const columnStyle = {\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: '20%',\n        marginLeft: \"30px\",\n    }\n    const titleStyle = {\n        display: \"inline-block\",\n        cursor: \"pointer\"\n    };\n\n    const categories = [\"Painting\", \"Illustration\", \"Carpentry\", \"Sculpture\", \"Video\", \"Other\"];\n\n\n    const htmlArray = categories.map(title => {\n        return(<h2\n                onClick = {props.setCurrent}\n                style = {titleStyle}\n                className = {props.current === title.toLowerCase() ? \"red grower\" : \"grower\"}\n            >{title}</h2>)\n                })\n\n        return(\n            <div style = {columnStyle}>\n                {htmlArray}\n            </div>\n        )\n}\n\nexport default SideBar;","import React from 'react'\n\nconst BigPreview = (props) => {\n    const imgStyle = {\n        height : \"90%\",\n        margin: 'auto'\n    }\n    \n    const screenStyle = {\n        height: \"100%\",\n        width: \"100%\",\n        position: 'fixed',\n        left: '0px',\n        top: '0px',\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundColor: 'rgba(0,0,0,.9)',\n        zIndex: 2,\n    }\n    \n    const descriptionStyle = {\n        backgroundColor: 'black',\n        opacity: '0',\n        color: 'white',\n        position: 'absolute',\n        top: '0px',\n        margin: '0px',\n        padding: '10px 30px',\n        transition: 'all .4s'\n    }\n\n    let timeout;\n\n    function showDescription(){\n        clearTimeout(timeout);\n        timeout = setTimeout(hideDescription, 3500);\n        document.getElementById('description').style.opacity = '.9';\n        window.addEventListener('click', end);\n\n    }\n\n    function hideDescription(){\n        document.getElementById('description').style.opacity = '0';\n    }\n\n    function end(){\n        console.log('end')\n        props.hideBigPreview();\n        clearTimeout(timeout);\n        window.removeEventListener('mousemove', showDescription);\n        window.removeEventListener('click', end)\n    }\n  \n    if(props.showBigPreview) {\n\n        window.addEventListener('mousemove', showDescription);\n        \n    return (\n        <div id=\"bigPreview\">\n            <div id=\"screen\" style = {screenStyle}>\n                <img style = {imgStyle} src={props.bigPreviewSource}></img>\n                <p id=\"description\" style = {descriptionStyle}>{props.bigPreviewDescription}</p>\n            </div>   \n        </div>)\n    } else {\n        return null;\n    }\n}\n\nexport default BigPreview;","import React, { Component } from 'react';\nimport Contents from './Contents';\nimport SideBar from \"./SideBar\";\nimport BigPreview from \"./BigPreview\";\n\n// const paintings = require('./media/paintings.json');\n\nclass Portfolio extends Component {\n    state = {\n        // content: paintings,\n        current: \"painting\",\n        bigPreviewSource : \"\",\n        bigPreviewDescription : \"\",\n        showBigPreview : false,\n        content : []\n    }\n\n    rowStyle = {\n        display: 'flex',\n        width: \"100%\"\n    }\n\n    setCurrent = (e) => {\n        this.setState({\n            current : e.target.innerHTML.toLowerCase()\n        })\n    }\n\n    setBigPreviewSource = (e) => {\n        let realTarget = e.target.parentElement.lastChild\n        console.log(realTarget)\n        this.setState({\n            bigPreviewSource : realTarget.src,\n            bigPreviewDescription : realTarget.alt,\n            showBigPreview : true\n        })\n    }\n\n    hideBigPreview = () => {\n        this.setState({\n            showBigPreview : false\n        })\n    }\n\n    render() {\n            return (\n                <div>\n                    <h1>Portfolio</h1>\n                    <BigPreview\n                        bigPreviewSource = {this.state.bigPreviewSource}\n                        bigPreviewDescription = {this.state.bigPreviewDescription}\n                        showBigPreview = {this.state.showBigPreview}\n                        hideBigPreview = {this.hideBigPreview}\n                    />\n                    <div style={this.rowStyle}>\n                        <SideBar\n                            current={this.state.current}\n                            setCurrent={this.setCurrent}\n                        />\n                        <Contents\n                            media={this.props.media}\n                            current={this.state.current}\n                            setBigPreviewSource={this.setBigPreviewSource}\n                        />\n                    </div>\n                </div>\n            )\n        }\n}\n\nexport default Portfolio;","import React, { Component } from \"react\";\n\nclass Contact extends Component {\n\n    state = {\n        name: '',\n        email: '',\n        message: ''\n    }\n    formStyle = {\n        display: 'flex',\n        flexDirection: 'column',\n        width: \"300px\",\n        margin: 'auto'\n    }\n    inputStyle = { \n        marginBottom: \"20px\"\n    }\n    submit = (e) => {\n        e.preventDefault();\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                name: this.state.name,\n                email: this.state.email,\n                message: this.state.message\n            })\n        }\n\n        fetch('/sendMail', options)\n    }\n    controlChanges = (field, e) => {\n        this.setState({\n            [field]: e.target.value\n        })\n    }\n\n    render() {\n            return (\n                <div>\n                    <h1>Contact</h1>\n                    <form style={this.formStyle}>\n                        <label for=\"name\">Name</label>\n                        <input \n                            style={this.inputStyle} \n                            name=\"name\"  \n                            type=\"text\"\n                            onChange={(e)=>{this.controlChanges(\"name\", e)}}\n                            value={this.state.name}\n                            >\n                        </input>\n                        <label for=\"email\">Email</label>\n                        <input\n                             style={this.inputStyle}\n                             type=\"email\" \n                             name=\"email\"\n                             onChange={(e)=>{this.controlChanges(\"email\", e)}}\n                             value={this.state.email}\n                             >\n\n                             </input>\n                        <label for=\"message\">Message</label>\n                        <textarea\n                            style={this.inputStyle}\n                            name=\"message\"\n                            rows=\"4\"\n                            cols=\"50\"\n                            onChange={(e)=>{this.controlChanges(\"message\", e)}}\n                            value={this.state.message}\n                            >\n                            </textarea>\n                        <button onClick={this.submit} type=\"submit\">Submit</button>\n                    </form>\n                </div>);\n        }\n}\n\nexport default Contact;","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nclass Login extends Component {\n    state = {\n        username: '',\n        password: '',\n        serverDialogue: '',\n        redirect: false\n    }\n    wrapperStyle = {\n        display: 'flex',\n        flexDirection: 'column',\n        width: \"300px\",\n        margin: 'auto'\n    }\n    controlChanges = (e, field) => {\n        this.setState({\n            [field]: e.target.value\n        })\n    }\n\n    redirect = () => {\n        this.setState({\n            redirect: true\n        })\n    }\n    componentWillUnmount = () => {\n        this.setState({\n            redirect: false\n        })\n    }\n\n    submit = () => {\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                username: this.state.username,\n                password: this.state.password,\n            })\n        }\n\n        fetch('/login', options)\n            .then(res => {\n                // try{\n                if (res.headers.has('x-auth-token')) {\n                    sessionStorage.setItem('token', res.headers.get('x-auth-token'))\n                    this.props.logIn();\n                    this.redirect();\n                }\n                else {\n                    this.setState({\n                        serverDialogue: \"Authentication Failed\"\n                    })\n                }\n            })\n    }\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to=\"/admin\" />\n        } else {\n            return (\n                <div>\n                    <h1>Log in</h1>\n                    <div style={this.wrapperStyle}>\n                        {this.redirector}\n                        <p style={{ color: 'red' }}>{this.state.serverDialogue}</p>\n                        <p>Username</p>\n                        <input\n                            value={this.state.username}\n                            onChange={(e) => { this.controlChanges(e, 'username') }}\n                            name=\"username\"\n                            type=\"text\">\n                        </input>\n\n                        <p>Password</p>\n                        <input\n                            value={this.state.password}\n                            onChange={(e) => { this.controlChanges(e, 'password') }}\n                            name=\"password\"\n                            type=\"password\"></input>\n                        <p><button onClick={this.submit}>Login</button></p>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nexport default Login;","import React, {Component} from 'react';\n\nclass Upload extends Component{\n\n    state = {\n        category: 'painting',\n        url: '',\n        title: '',\n        year: '',\n        description: '',\n        serverDialogue: ''\n    }\n\n    columnStyle = {\n        display: 'flex',\n        flexDirection: 'column',\n        margin: 'auto',\n        width: '400px'\n    }\n\n    controlChange = (e, field) =>{\n        this.setState({\n            [field]: e.target.value\n        })\n    }\n\n    submit =  async () => {\n        const options = { \n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'x-auth-token': sessionStorage.getItem('token')\n            },\n            body: JSON.stringify({\n                category: this.state.category,\n                url: this.state.url,\n                title: this.state.title,\n                year: this.state.year,\n                description: this.state.description,\n            })\n        }\n        const fetcher = await fetch('/upload', options);\n        const newContent = await this.props.refreshContent();\n        const edit = await this.props.setView('edit');\n    }\n\n    render(){\n        return (\n            <div style={this.columnStyle}>\n                {this.props.adminHeader('upload')}\n                <img\n                    style={{width : '100px'}}\n                    src={this.state.url}\n                >\n                </img>\n                <p>URL</p>\n                <input\n                    type=\"text\"\n                    value={this.state.url}\n                    onChange={(e)=>this.controlChange(e,'url')}\n                    >      \n                </input>\n                <p>Category</p>\n                <select\n                    value={this.state.category}\n                    onChange={(e)=>this.controlChange(e,'category')}\n                >\n                    <option value='painting'>Painting</option>\n                    <option value='illustration'>Illustration</option>\n                    <option value='carpentry'>Carpentry</option>\n                    <option value='sculpture'>Sculpture</option>\n                    <option value='video'>Video</option>\n                    <option value='other'>Other</option>\n                </select>\n                <p>Title</p>\n                <input \n                    type=\"text\" \n                    name=\"Title\"\n                    value={this.state.title}\n                    onChange={(e)=>this.controlChange(e,'title')}>\n                </input>\n                <p>Year</p>\n                <input\n                    type = \"number\"\n                    value={this.state.year}\n                    onChange={(e)=>this.controlChange(e,'year')}\n                    >              \n                </input>\n                <p>Description</p>\n                <textarea \n                    style = {{width: '400px', height: '200px'}}\n                    value={this.state.description}\n                    onChange={(e)=>this.controlChange(e,'description')}\n                    >\n                </textarea>\n                <p style={{color:'red'}}>{this.state.serverDialogue}</p>\n                <button \n                    onClick = {this.submit}\n                    style = {{marginBottom: '50px', borderColor: 'black', color: 'white', backgroundColor: 'black', cursor: 'pointer'}}\n                    >Upload!</button>\n            </div>\n            )\n    }\n}\n\nexport default Upload;","import React, { Component } from 'react'\n\nclass Editor extends Component {\n    state = {\n        category: 'painting',\n        url: '',\n        title: '',\n        year: '',\n        description: '',\n        serverDialogue: ''\n    }\n\n    componentDidMount = () => {\n        //GET ONE\n        const options = {\n            headers: {\n                'x-auth-token': sessionStorage.getItem('token')\n            }\n        }\n        fetch(`/getOne/${this.props.target}`, options)\n            .then(res => res.json())\n            .then(res => {\n                this.setState({\n                    category: res.category,\n                    url: res.url,\n                    title: res.title,\n                    year: res.year,\n                    description: res.description,\n                })\n            })\n    }\n\n    controlChange = (e, field) => {\n        this.setState({\n            [field]: e.target.value\n        })\n    }\n\n    submit = (id) => {\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'x-auth-token': sessionStorage.getItem('token')\n            },\n            body: JSON.stringify({\n                category: this.state.category,\n                url: this.state.url,\n                title: this.state.title,\n                year: parseInt(this.state.year),\n                description: this.state.description,\n            })\n        }\n        fetch(`/update/${id}`, options)\n            .then(res => this.props.refreshContent())\n            .then(res => this.props.finishEditing())\n    }\n\n    delete = () => {\n        const options = {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n                'x-auth-token': sessionStorage.getItem('token')\n            }\n        }\n        fetch(`/delete/${this.props.target}`, options)\n            .then(res => this.props.refreshContent())\n            .then(res => this.props.finishEditing())\n    }\n    \n\n    columnStyle = {\n        display: 'flex',\n        flexDirection: 'column',\n        margin: 'auto',\n        width: '400px'\n    }\n    render() {\n        return (\n            <div style={this.columnStyle}>\n                <h1>Edit</h1>\n                <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                    <img\n                        style={{ width: '100px' }}\n                        src={this.state.url}\n                    >\n                    </img>\n                    <p\n                        onClick={this.delete}\n                        style={{ textDecoration: 'underline', color: 'red', cursor: 'pointer' }}\n                    >Delete?</p>\n                </div>\n                <p>URL</p>\n                <input\n                    type=\"text\"\n                    value={this.state.url}\n                    onChange={(e) => this.controlChange(e, 'url')}\n                >\n                </input>\n                <p>Category</p>\n                <select\n                    value={this.state.category}\n                    onChange={(e) => this.controlChange(e, 'category')}\n                >\n                    <option value='painting'>Painting</option>\n                    <option value='illustration'>Illustration</option>\n                    <option value='carpentry'>Carpentry</option>\n                    <option value='sculpture'>Sculpture</option>\n                    <option value='video'>Video</option>\n                    <option value='other'>Other</option>\n                </select>\n                <p>Title</p>\n                <input\n                    type=\"text\"\n                    name=\"Title\"\n                    value={this.state.title}\n                    onChange={(e) => this.controlChange(e, 'title')}>\n                </input>\n                <p>Year</p>\n                <input\n                    type=\"number\"\n                    value={this.state.year.toString()}\n                    onChange={(e) => this.controlChange(e, 'year')}\n                >\n                </input>\n                <p>Description</p>\n                <textarea\n                    style={{ width: '400px', height: '200px' }}\n                    value={this.state.description}\n                    onChange={(e) => this.controlChange(e, 'description')}\n                >\n                </textarea>\n                <p style={{ color: 'red' }}>{this.state.serverDialogue}</p>\n                <button\n                    onClick={() => {\n                        this.submit(this.props.target)\n                    }}\n                    style={{ marginBottom: '50px', borderColor: 'black', color: 'white', backgroundColor: 'black', cursor: 'pointer' }}\n                >Upload!</button>\n            </div>\n        )\n    }\n}\n\nexport default Editor","import React, {Component} from 'react';\nimport Editor from './Editor';\n\nclass Edit extends Component{\n    state = {\n        editing: false,\n        target: ''\n    }\n\n    edit = (id) => {\n        this.setState({\n            editing: true,\n            target: id\n        })\n    }\n\n    finishEditing = () => {\n        this.setState({\n            editing: false,\n            target: ''\n        })\n    }\n\n    cardStyle = {\n        display: 'flex',\n        flexDirection: 'row',\n        margin: '10px 40px',\n        padding: '10px',\n        border: '1px solid grey',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        cursor: 'pointer',\n        borderRadius: '20px'\n    }\n    \n\n    render(){\n        if(!this.state.editing){\n            let media = this.props.media.sort((a,b)=>{\n                return a.category - b.category\n            })\n            let htmlArray = media.map(item => {\n                return <div style = {this.cardStyle} \n                            onClick = {() => this.edit(item._id)}\n                            className = \"thickener\"\n                        >\n                    <p style={{display: 'inline-block'}}>{item.category}</p>\n                    <div style={{display: 'flex', flexDirection: 'column'}}>\n                        <h3 style={{display: 'inline-block'}} >{item.title}</h3>\n                        <p style={{display: 'inline-block'}}>{item.year}</p>\n                    </div>\n                    <p style={{display:'inline-block'}}>{item.description}</p>\n                    <img style={{width: '80px', height: '80px', display: 'inline-block'}} src={item.url}/>\n                </div>\n            })\n        return(\n        <div>\n             {this.props.adminHeader('edit')}\n             <div style = {{display: 'flex', flexDirection: 'column', justifyContent: 'flex-start', flexWrap: 'wrap'}}>\n                {htmlArray}\n             </div>\n        </div>\n        )\n        } else {\n            return <Editor \n                        target = {this.state.target}\n                        finishEditing = {this.finishEditing}\n                        refreshContent = {this.props.refreshContent}\n                    />;\n        }\n    }\n}\n\nexport default Edit;","import React, { Component } from 'react';\nimport Upload from './Upload';\nimport Edit from './Edit';\nimport { Redirect } from 'react-router-dom';\n\nclass Admin extends Component {\n    state = {\n        view: 'upload',\n    }\n\n    setView = (string) => {\n        this.setState({\n            view: string\n        })\n    }\n\n    rowStyle = {\n        display: 'flex',\n        maxWidth: '400px',\n        justifyContent: 'space-between',\n        margin: 'auto'\n    }\n\n    adminHeader = (view) => {\n        return (<div>\n            <h1>Admin</h1>\n            <div style={this.rowStyle}>\n                <p\n                    className=\"option\"\n                    style={view === 'upload' ? { textDecoration: 'underline' }\n                        : { textDecoration: 'none' }}\n                    onClick={() => { this.setView('upload') }}>\n                    Upload Content\n                            </p>\n                <p\n                    className=\"option\"\n                    style={view === 'edit' ? { textDecoration: 'underline' }\n                        : { textDecoration: 'none' }}\n                    onClick={() => { this.setView('edit') }}>\n                    Edit Content\n                            </p>\n            </div>\n        </div>)\n    }\n\n    render() {\n        if (!this.props.loggedIn) {\n            return <Redirect to=\"/\" />\n        } else {\n            if (this.state.view === 'upload') {\n                return (<Upload\n                    adminHeader={this.adminHeader}\n                    refreshContent={this.props.refreshContent}\n                    setView={this.setView}\n                />)\n            }\n            if (this.state.view === 'edit') {\n                return (<Edit\n                    adminHeader={this.adminHeader}\n                    media = {this.props.media}\n                    refreshContent = {this.props.refreshContent}\n                />)\n            }\n        }\n    }\n\n}\n\nexport default Admin;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst TopNav = (props) => {\n\n    const optionStyle = {\n        cursor: \"pointer\",\n        textDecoration: \"underline\",\n        margin: '2px 10px 10px 10px'\n      }\n\n      const listStyle = {\n          display: 'flex',\n          padding: 0,\n          margin: 0\n      }\n    \n    let text;\n    let target;\n\n    if(props.loggedIn){\n        text = \"Admin Panel\"\n        target = \"/admin\"\n    } else {\n        text = \"Login\"\n        target = \"/login\"\n    }\n\n        return(<ul style = {listStyle}>\n            <Link to=\"/\">\n            <p\n                style={optionStyle}\n                className=\"option grower\"\n            >Home\n            </p>\n            </Link>\n\n            <Link to={target}>\n            <p\n                style={optionStyle}\n                className=\"option grower\"\n            >{text}\n            </p>\n            </Link>\n\n            <Link to='/about'>\n            <p\n                style={optionStyle}\n                className=\"option grower\"\n            >About\n            </p>\n            </Link>\n\n            <Link to='/portfolio'>\n            <p\n                style={optionStyle}\n                className=\"option grower\"\n            >Portfolio\n            </p>\n            </Link>\n\n            <Link to='/contact'>\n            <p\n                style={optionStyle}\n                className=\"option grower\"\n            >Contact\n            </p>\n            </Link>\n\n\n        </ul>)\n        }\n\nexport default TopNav;","import React, { Component } from 'react';\nimport './App.css';\n\nimport Index from './Index/Index';\nimport About from './About/About';\nimport Portfolio from './Portfolio/Portfolio';\nimport Contact from './Contact/Contact';\nimport Login from './Login/Login';\nimport Admin from './Admin/Admin';\nimport TopNav from './TopNav/TopNav';\n\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { promised } from 'q';\n\n\nclass App extends Component {\n  state = {\n    view: \"index\",\n    media: [],\n    loggedIn: false\n  }\n\n  logIn = () => {\n    this.setState({\n      loggedIn: true\n    })\n  }\n\n  componentDidMount = () => {\n    this.refreshContent();\n  }\n\n  refreshContent = () => {\n    console.log('refresh')\n    fetch('/pull')\n    .then(res => res.json())\n\n    .then(res => {\n      this.setState({\n        media: res\n      })\n    })\n    .then(res=>{\n      return new Promise((resolve, reject) => {\n        resolve(\"done\")\n      });\n    })\n  }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <TopNav\n            loggedIn={this.state.loggedIn}\n            backButtonStyle={this.backButtonStyle}\n          />\n\n          <Route\n            path = \"/\"\n            exact\n            render = {(props) => \n              <Index\n              loggedIn={this.state.loggedIn}        \n            />}\n          />\n\n          <Route\n            path = \"/about\"\n            exact\n            render = {(props) => \n              <About\n            />}\n          />\n\n          <Route\n            path = \"/portfolio\"\n            exact\n            render = {(props) =>\n              <Portfolio\n              media={this.state.media}\n            />}\n          />\n\n          <Route\n            path=\"/contact\"\n            exact\n            render = {(props)=>\n              <Contact\n              />}\n            />\n\n            <Route\n              path=\"/Login\"\n              exact\n              render = {(props)=>\n                <Login\n                logIn={this.logIn}\n            />}\n          />\n\n          <Route\n            path=\"/admin\"\n            exact\n            render ={(props)=>\n              <Admin\n                loggedIn={this.state.loggedIn}\n                media={this.state.media}\n                refreshContent={this.refreshContent}\n              />}\n          />\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}